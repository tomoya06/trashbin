"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4749],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=i,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(m,a(a({ref:t},f),{},{components:n})):r.createElement(m,a({ref:t},f))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7540:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return f},Highlight:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],c={tags:["\u6808","\u6570\u7ec4","\u5355\u8c03\u6808","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII039",title:"\ud83d\udd34 \u5251\u6307 Offer II 039. \u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef",ques_id:"OfferII039",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/0ynMMM/",online_name:"\u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef",level:"h"},l=void 0,s={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII039",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII039",isDocsHomePage:!1,title:"\ud83d\udd34 \u5251\u6307 Offer II 039. \u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef",description:"<span",source:"@site/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII039.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII039",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII039",tags:[{label:"\u6808",permalink:"/trashbin/docs/tags/\u6808"},{label:"\u6570\u7ec4",permalink:"/trashbin/docs/tags/\u6570\u7ec4"},{label:"\u5355\u8c03\u6808",permalink:"/trashbin/docs/tags/\u5355\u8c03\u6808"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u6808","\u6570\u7ec4","\u5355\u8c03\u6808","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII039",title:"\ud83d\udd34 \u5251\u6307 Offer II 039. \u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef",ques_id:"OfferII039",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/0ynMMM/",online_name:"\u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef",level:"h"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 038. \u6bcf\u65e5\u6e29\u5ea6",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII038"},next:{title:"\ud83d\udd34 \u5251\u6307 Offer II 040. \u77e9\u9635\u4e2d\u6700\u5927\u7684\u77e9\u5f62",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII040"}},f=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],p=function(e){var t=e.children,n=e.color;return(0,o.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},u={toc:f,Highlight:p};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,o.kt)(p,{color:"#ff375f",mdxType:"Highlight"},"\u56f0\u96be")),(0,o.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/0ynMMM/"},"\ud83d\udd17 leetcode")))),(0,o.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,o.kt)("p",null,"\u53c2\u8003",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/largest-rectangle-in-histogram/solution/zhu-zhuang-tu-zhong-zui-da-de-ju-xing-by-leetcode-/"},"\u5b98\u65b9\u9898\u89e3")),(0,o.kt)("p",null,"\u8fd9\u9053\u9898\u662f\u7528\u5355\u8c03\u6808\u6ca1\u9519\uff0c\u4f46\u5728\u904d\u5386\u6784\u9020\u5355\u8c03\u6808\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u4e00\u8fb9\u5728\u7ef4\u62a4\u6bcf\u4e2a\u67f1\u5b50\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u800c\u5355\u8c03\u6808\u672c\u8eab\u5e76\u4e0d\u662f\u8fb9\u754c\u7684\u5b58\u50a8\u5bb9\u5668\u3002"),(0,o.kt)("p",null,"\u5148\u7528\u66b4\u529b\u89e3\u6cd5\uff0c\u4e00\u79cd\u601d\u8def\u662f\u76f4\u63a5\u904d\u5386\u5de6\u53f3\u8fb9\u754c\uff0c\u4e00\u79cd\u601d\u8def\u662f\u904d\u5386\u6bcf\u4e2a\u67f1\u5b50\u3001\u627e\u5230\u67f1\u5b50\u7684\u5de6\u53f3\u8fb9\u754c\u3002\u5355\u8c03\u6808\u4fbf\u662f\u5bf9\u7b2c\u4e8c\u79cd\u601d\u8def\u7684\u4f18\u5316\u3002"),(0,o.kt)("p",null,"\u9996\u5148\u627e\u6bcf\u4e2a\u67f1\u5b50\u7684\u5de6\u8fb9\u754c\uff0c\u6808\u5355\u8c03\u9012\u589e\uff0c\u5e95\u4e0b\u53ea\u4fdd\u7559\u6bd4\u5f53\u524d\u67f1\u5b50\u77ee\u7684\u524d\u5e8f\u67f1\u5b50\uff0c\u8bf4\u660e\u5f53\u524d\u67f1\u5b50\u6700\u591a\u53ea\u80fd\u5f71\u54cd\u5230\u8fd9\u4e2a\u524d\u5e8f\u67f1\u5b50\uff08\u4e0d\u542b\uff09\u3002"),(0,o.kt)("p",null,"\u53f3\u8fb9\u754c\u540c\u7406\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        int n = heights.length;\n        int[] left = new int[n];\n        int[] right = new int[n];\n\n        LinkedList<Integer> stack = new LinkedList<>();\n\n        for (int i=0; i<n; i++) {\n            while (!stack.isEmpty() && heights[stack.getLast()] >= heights[i]) {\n                stack.removeLast();\n            }\n            left[i] = stack.isEmpty() ? -1 : stack.getLast();\n            stack.add(i);\n        }\n\n        stack.clear();\n\n        for (int i=n-1; i>=0; i--) {\n            while (!stack.isEmpty() && heights[stack.getLast()] >= heights[i]) {\n                stack.removeLast();\n            }\n            right[i] = stack.isEmpty() ? n : stack.getLast();\n            stack.add(i);\n        }\n\n        int res = -1;\n        for (int i=0; i<n; i++) {\n            res = Math.max(res, (right[i] - left[i] - 1) * heights[i]);\n        }\n\n        return res;\n    }\n}\n\n")))}d.isMDXComponent=!0}}]);