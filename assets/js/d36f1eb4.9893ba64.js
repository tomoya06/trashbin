"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8289],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return u}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},f=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),d=s(t),u=i,m=d["".concat(l,".").concat(u)]||d[u]||p[u]||o;return t?r.createElement(m,a(a({ref:n},f),{},{components:t})):r.createElement(m,a({ref:n},f))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1639:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return f},Highlight:function(){return p},default:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={tags:["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u5e76\u67e5\u96c6","\u56fe","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII116",title:"\ud83d\udfe1 \u5251\u6307 Offer II 116. \u7701\u4efd\u6570\u91cf",ques_id:"OfferII116",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/bLyHh0/",online_name:"\u7701\u4efd\u6570\u91cf",level:"m"},l=void 0,s={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII116",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII116",isDocsHomePage:!1,title:"\ud83d\udfe1 \u5251\u6307 Offer II 116. \u7701\u4efd\u6570\u91cf",description:"<span",source:"@site/docs\\\u5251\u6307offer\u4e13\u9879\u7248\\leetcode_OfferII116.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII116",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII116",tags:[{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/trashbin/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/trashbin/docs/tags/\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e76\u67e5\u96c6",permalink:"/trashbin/docs/tags/\u5e76\u67e5\u96c6"},{label:"\u56fe",permalink:"/trashbin/docs/tags/\u56fe"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u5e76\u67e5\u96c6","\u56fe","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII116",title:"\ud83d\udfe1 \u5251\u6307 Offer II 116. \u7701\u4efd\u6570\u91cf",ques_id:"OfferII116",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/bLyHh0/",online_name:"\u7701\u4efd\u6570\u91cf",level:"m"},sidebar:"bffer",previous:{title:"\ud83d\udd34 \u5251\u6307 Offer II 114. \u5916\u661f\u6587\u5b57\u5178",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII114"},next:{title:"\ud83d\udd34 \u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117"}},f=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],p=function(e){var n=e.children,t=e.color;return(0,o.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},d={toc:f,Highlight:p};function u(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,o.kt)(p,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49")),(0,o.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/bLyHh0/"},"\ud83d\udd17 leetcode")))),(0,o.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,o.kt)("p",null,"\u60f3\u5230\u4e86\u67d0\u9053\u9898\u7528parents\u7684\u65b9\u6cd5\uff0c\u5b66\u540d\u53eb\u505a",(0,o.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/93647900"},"\u5e76\u67e5\u96c6"),"\u3002"),(0,o.kt)("p",null,"\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5408\u5e76parent\u8282\u70b9\uff0c\u8fd9\u91cc\u8fd8\u662f\u770b\u4e86\u4e0b\u9898\u89e3\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int findCircleNum(int[][] isConnected) {\n        int n = isConnected.length;\n        int[] parents = new int[n];\n\n        for (int i=0; i<n; i+=1) {\n            parents[i] = i;\n        }\n\n        for (int i=1; i<n; i+=1) {\n            for (int j=0; j<i; j+=1) {\n                if (isConnected[i][j] == 1) {\n                    union(parents, i, j);\n                }\n            }\n        }\n\n        int res = n;\n        for (int i=0; i<n; i+=1) {\n            if (parents[i] != i) {\n                res -= 1;\n            }\n        }\n\n        return res;\n    }\n\n    private void union(int[] parents, int i, int j) {\n        parents[find(parents, i)] = find(parents, j);\n    }\n\n    private int find(int[] parents, int i) {\n        if (parents[i] == i) {\n            return i;\n        }\n        parents[i] = find(parents, parents[i]);\n        return parents[i];\n    }\n}\n")),(0,o.kt)("h1",{id:"\u9898\u89e32"},"\u9898\u89e32"),(0,o.kt)("p",null,"\u7528\u56de\u4f20\u7edf\u7684DFS\u54af"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    private void dfs(int[][] isConnected, boolean[] visited, int entry, int size) {\n        if (visited[entry]) {\n            return;\n        }\n        visited[entry] = true;\n        for (int i=0; i<size; i+=1) {\n            if (isConnected[entry][i] == 1) {\n                dfs(isConnected, visited, i, size);\n            }\n        }\n    }\n\n    public int findCircleNum(int[][] isConnected) {\n        int n = isConnected.length;\n        boolean[] visited = new boolean[n];\n        int res = 0;\n\n        for (int i=0; i<n; i+=1) {\n            if (!visited[i]) {\n                res += 1;\n                dfs(isConnected, visited, i, n);\n            }\n        }\n\n        return res;\n    }\n}\n")))}u.isMDXComponent=!0}}]);