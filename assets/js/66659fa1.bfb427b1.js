"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4948],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return d}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),f=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},s=function(e){var r=f(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=f(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return n?t.createElement(m,l(l({ref:r},s),{},{components:n})):t.createElement(m,l({ref:r},s))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=u;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var f=2;f<i;f++)l[f]=n[f];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4969:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return f},toc:function(){return s},Highlight:function(){return p},default:function(){return d}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],a={tags:["\u5251\u6307offer","\u5206\u6cbb\u6cd5","\u5f52\u5e76\u6392\u5e8f"],id:"leetcode_offer51",title:"\ud83d\udd34 \u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",ques_id:"offer51",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof/",online_name:"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",level:"h"},c=void 0,f={unversionedId:"\u5251\u6307offer/leetcode_offer51",id:"\u5251\u6307offer/leetcode_offer51",isDocsHomePage:!1,title:"\ud83d\udd34 \u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",description:"<span",source:"@site/docs/\u5251\u6307offer/leetcode_offer51.mdx",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/leetcode_offer51",permalink:"/docs/\u5251\u6307offer/leetcode_offer51",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"},{label:"\u5206\u6cbb\u6cd5",permalink:"/docs/tags/\u5206\u6cbb\u6cd5"},{label:"\u5f52\u5e76\u6392\u5e8f",permalink:"/docs/tags/\u5f52\u5e76\u6392\u5e8f"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u5206\u6cbb\u6cd5","\u5f52\u5e76\u6392\u5e8f"],id:"leetcode_offer51",title:"\ud83d\udd34 \u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",ques_id:"offer51",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof/",online_name:"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",level:"h"},sidebar:"offer",previous:{title:"\ud83d\udfe2 \u5251\u6307 Offer 50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26",permalink:"/docs/\u5251\u6307offer/leetcode_offer50"},next:{title:"\ud83d\udfe1 \u5251\u6307 Offer 52. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",permalink:"/docs/\u5251\u6307offer/leetcode_offer52"}},s=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]}],p=function(e){var r=e.children,n=e.color;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},r)},u={toc:s,Highlight:p};function d(e){var r=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,i.kt)(p,{color:"#ff375f",mdxType:"Highlight"},"\u56f0\u96be")),(0,i.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof/"},"\ud83d\udd17 leetcode")))),(0,i.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def reversePairs(self, nums: List[int]) -> int:\n        def merge_sort(l, r):\n            if l >= r:\n                return 0\n            mid = (l+r)//2\n            res = merge_sort(l, mid) + merge_sort(mid+1, r)\n            ll, rr = l, mid+1\n            tmp[l:r+1] = nums[l:r+1]\n            for idx in range(l, r+1):\n                if ll == mid+1:\n                    nums[idx] = tmp[rr]\n                    rr += 1\n                elif rr == r+1:\n                    nums[idx] = tmp[ll]\n                    ll += 1\n                elif tmp[ll] <= tmp[rr]:\n                    nums[idx] = tmp[ll]\n                    ll += 1\n                else:\n                    nums[idx] = tmp[rr]\n                    res += mid-ll+1\n                    rr += 1\n            return res\n        \n        tmp = [0] * len(nums)\n        return merge_sort(0, len(nums)-1)\n")))}d.isMDXComponent=!0}}]);