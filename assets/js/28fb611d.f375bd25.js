"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1791],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return u}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),f=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=f(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=f(t),u=o,m=p["".concat(c,".").concat(u)]||p[u]||d[u]||i;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var f=2;f<i;f++)a[f]=t[f];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6390:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return f},toc:function(){return s},Highlight:function(){return d},default:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u641c\u7d22\u6811","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u53c9\u6811","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII056",title:"\ud83d\udfe2 \u5251\u6307 Offer II 056. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u4e4b\u548c",ques_id:"OfferII056",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/opLdQZ/",online_name:"\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u4e4b\u548c",level:"e"},c=void 0,f={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII056",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII056",isDocsHomePage:!1,title:"\ud83d\udfe2 \u5251\u6307 Offer II 056. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u4e4b\u548c",description:"<span",source:"@site/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII056.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII056",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII056",tags:[{label:"\u6811",permalink:"/docs/tags/\u6811"},{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/docs/tags/\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/docs/tags/\u4e8c\u53c9\u641c\u7d22\u6811"},{label:"\u54c8\u5e0c\u8868",permalink:"/docs/tags/\u54c8\u5e0c\u8868"},{label:"\u53cc\u6307\u9488",permalink:"/docs/tags/\u53cc\u6307\u9488"},{label:"\u4e8c\u53c9\u6811",permalink:"/docs/tags/\u4e8c\u53c9\u6811"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u641c\u7d22\u6811","\u54c8\u5e0c\u8868","\u53cc\u6307\u9488","\u4e8c\u53c9\u6811","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII056",title:"\ud83d\udfe2 \u5251\u6307 Offer II 056. \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u4e4b\u548c",ques_id:"OfferII056",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/opLdQZ/",online_name:"\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u4e24\u4e2a\u8282\u70b9\u4e4b\u548c",level:"e"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 055. \u4e8c\u53c9\u641c\u7d22\u6811\u8fed\u4ee3\u5668",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII055"},next:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 057. \u503c\u548c\u4e0b\u6807\u4e4b\u5dee\u90fd\u5728\u7ed9\u5b9a\u7684\u8303\u56f4\u5185",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII057"}},s=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]},{value:"\u9898\u89e32",id:"\u9898\u89e32",children:[]}],d=function(e){var n=e.children,t=e.color;return(0,i.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},p={toc:s,Highlight:d};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,i.kt)(d,{color:"#00b8a3",mdxType:"Highlight"},"\u7b80\u5355")),(0,i.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/opLdQZ/"},"\ud83d\udd17 leetcode")))),(0,i.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private Set<Integer> visited;\n    private int target;\n\n    private boolean visit(TreeNode node) {\n        if (node.left != null) {\n            boolean leftRes = visit(node.left);\n            if (leftRes) {\n                return true;\n            }\n        }\n        if (visited.contains(target - node.val)) {\n            return true;\n        }\n\n        visited.add(node.val);\n\n        if (node.right != null) {\n            boolean rightRes = visit(node.right);\n            if (rightRes) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public boolean findTarget(TreeNode root, int k) {\n        this.visited = new HashSet<>();\n        this.target = k;\n        return visit(root);\n    }\n}\n")),(0,i.kt)("h2",{id:"\u9898\u89e32"},"\u9898\u89e32"),(0,i.kt)("p",null,"\u8fd9\u9053\u9898\u7528\u8fed\u4ee3\u5199\u6cd5\u66f4\u597d\u63d0\u524d\u9000\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean findTarget(TreeNode root, int k) {\n        Deque<TreeNode> stack = new ArrayDeque<>();\n        Set<Integer> visited = new HashSet<>();\n        TreeNode node;\n\n        while (root != null || !stack.isEmpty()) {\n            while (root != null) {\n                stack.push(root);\n                root = root.left;\n            }\n\n            node = stack.pop();\n            if (visited.contains(k - node.val)) {\n                return true;\n            }\n\n            visited.add(node.val);\n            root = node.right;\n        }\n\n        return false;\n    }\n}\n")))}u.isMDXComponent=!0}}]);