"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5731],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=u(t),p=o,m=d["".concat(c,".").concat(p)]||d[p]||f[p]||i;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},702:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},Highlight:function(){return f},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),l=["components"],a={tags:["\u94fe\u8868","\u53cc\u6307\u9488","\u5206\u6cbb","\u6392\u5e8f","\u5f52\u5e76\u6392\u5e8f","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII077",title:"\ud83d\udfe1 \u5251\u6307 Offer II 077. \u94fe\u8868\u6392\u5e8f",ques_id:"OfferII077",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/7WHec2/",online_name:"\u94fe\u8868\u6392\u5e8f",level:"m"},c=void 0,u={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII077",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII077",isDocsHomePage:!1,title:"\ud83d\udfe1 \u5251\u6307 Offer II 077. \u94fe\u8868\u6392\u5e8f",description:"<span",source:"@site/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII077.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII077",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII077",tags:[{label:"\u94fe\u8868",permalink:"/trashbin/docs/tags/\u94fe\u8868"},{label:"\u53cc\u6307\u9488",permalink:"/trashbin/docs/tags/\u53cc\u6307\u9488"},{label:"\u5206\u6cbb",permalink:"/trashbin/docs/tags/\u5206\u6cbb"},{label:"\u6392\u5e8f",permalink:"/trashbin/docs/tags/\u6392\u5e8f"},{label:"\u5f52\u5e76\u6392\u5e8f",permalink:"/trashbin/docs/tags/\u5f52\u5e76\u6392\u5e8f"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u94fe\u8868","\u53cc\u6307\u9488","\u5206\u6cbb","\u6392\u5e8f","\u5f52\u5e76\u6392\u5e8f","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII077",title:"\ud83d\udfe1 \u5251\u6307 Offer II 077. \u94fe\u8868\u6392\u5e8f",ques_id:"OfferII077",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/7WHec2/",online_name:"\u94fe\u8868\u6392\u5e8f",level:"m"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 076. \u6570\u7ec4\u4e2d\u7684\u7b2c k \u5927\u7684\u6570\u5b57",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII076"},next:{title:"\ud83d\udd34 \u5251\u6307 Offer II 078. \u5408\u5e76\u6392\u5e8f\u94fe\u8868",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII078"}},s=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],f=function(e){var n=e.children,t=e.color;return(0,i.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},d={toc:s,Highlight:f};function p(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,i.kt)(f,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49(\u6211\u89c9\u5f97\u662f\u56f0\u96be)")),(0,i.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/7WHec2/"},"\ud83d\udd17 leetcode")))),(0,i.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,i.kt)("p",null,"\u56f0\u96be\u4e4b\u5904\u8fd8\u662f\u5728\u4e8e\u8282\u70b9\u600e\u4e48\u65ad\u3001\u600e\u4e48\u8fde\u3002"),(0,i.kt)("p",null,"\u5408\u5e76\u94fe\u8868\u601d\u8def\u662f\u4e8c\u5206\u6cd5\u3002\u4e8c\u5206\u6cd5\u4e5f\u6709\u4e24\u79cd\u5206\u6cbb\u601d\u8def\uff0c\u4e00\u79cd\u662f\u7528\u9012\u5f52\uff0c\u6bcf\u6b21\u627e\u5230\u4e2d\u70b9\uff0c\u628a\u524d\u540e\u4e24\u6bb5\u5206\u522b\u518d\u6392\u5e8f&merge\u3002"),(0,i.kt)("p",null,"\u4e00\u79cd\u662f\u4ece\u524d\u5f80\u540e\u8fb9\u8d70\u8fb9merge\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230\u5e38\u6570\u5b58\u50a8\u7a7a\u95f4\u7684\u8981\u6c42\uff0c\u4f46\u662f\u88c1\u526a\u5c31\u7ed5\u4e86\u4e00\u70b9\u3002"),(0,i.kt)("p",null,"\u4e0b\u9762\u662f\u8feb\u4e0d\u5f97\u5df2\u6284\u7684\u7b54\u6848\u3002\u5173\u952e\u5728\u4e8e\uff0cprev\u5982\u4f55\u8fde\u63a5\u4e0b\u4e00\u6bb5\u7684\u5934\uff1f\u5b9e\u9645\u4e0a\u662f\u8fd9\u6b21\u904d\u5386\u4e0d\u7528\u7ba1\uff0c\u628aprev\u79fb\u5230\u8fd9\u6b21\u904d\u5386\u7684\u961f\u5c3e\u5373\u53ef\uff0c\u8ba9\u4e0b\u4e00\u6b21\u904d\u5386\u63a5\u4e0a\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode sortList(ListNode head) {\n        if (head == null) {\n            return null;\n        }\n        ListNode dummy = new ListNode(0, head);\n        ListNode prev, next, cur = head, h1, h2;\n\n        int k = 0;\n        while (cur != null) {\n            k += 1;\n            cur = cur.next;\n        }\n\n        for (int subLength = 1; subLength <= k; subLength *= 2) {\n            prev = dummy; cur = dummy.next;\n            while (cur != null) {\n                h1 = cur;\n\n                for (int i=1; i<subLength && cur.next != null; i+=1) {\n                    cur = cur.next;\n                }\n                h2 = cur.next;\n                cur.next = null;\n                cur = h2;\n\n                for (int i=1; i<subLength && cur != null && cur.next != null; i+=1) {\n                    cur = cur.next;\n                }\n                next = null;\n                if (cur != null) {\n                    next = cur.next;\n                    cur.next = null;\n                }\n                ListNode mergeHead = mergeList(h1, h2);\n                prev.next = mergeHead;\n                while (prev.next != null) {\n                    prev = prev.next;\n                }\n                cur = next;\n            }\n        }\n\n        return dummy.next;\n    }\n\n    public ListNode mergeList(ListNode h1, ListNode h2) {\n        ListNode dummy = new ListNode();\n        dummy.next = h1;\n        ListNode cur = dummy, p;\n        while (h1 != null && h2 != null) {\n            if (h1.val > h2.val) {\n                p = h2.next;\n                h2.next = null;\n                cur.next = h2;\n                h2 = p;\n            } else {\n                p = h1.next;\n                h1.next = null;\n                cur.next = h1;\n                h1 = p;\n            }\n            cur = cur.next;\n        }\n        if (h1 != null) {\n            cur.next = h1;\n        }\n        if (h2 != null) {\n            cur.next = h2;\n        }\n        return dummy.next;\n    }\n}\n")))}p.isMDXComponent=!0}}]);