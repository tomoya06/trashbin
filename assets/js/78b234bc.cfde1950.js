"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4011],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),f=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=f(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=f(t),m=a,u=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(u,i(i({ref:n},s),{},{components:t})):r.createElement(u,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var f=2;f<o;f++)i[f]=t[f];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7571:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return f},toc:function(){return s},Highlight:function(){return d},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u52a8\u6001\u89c4\u5212","\u4e8c\u53c9\u6811","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII051",title:"\ud83d\udd34 \u5251\u6307 Offer II 051. \u8282\u70b9\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84",ques_id:"OfferII051",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/jC7MId/",online_name:"\u8282\u70b9\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84",level:"h"},c=void 0,f={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII051",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII051",isDocsHomePage:!1,title:"\ud83d\udd34 \u5251\u6307 Offer II 051. \u8282\u70b9\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84",description:"<span",source:"@site/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII051.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII051",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII051",tags:[{label:"\u6811",permalink:"/docs/tags/\u6811"},{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u52a8\u6001\u89c4\u5212",permalink:"/docs/tags/\u52a8\u6001\u89c4\u5212"},{label:"\u4e8c\u53c9\u6811",permalink:"/docs/tags/\u4e8c\u53c9\u6811"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u52a8\u6001\u89c4\u5212","\u4e8c\u53c9\u6811","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII051",title:"\ud83d\udd34 \u5251\u6307 Offer II 051. \u8282\u70b9\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84",ques_id:"OfferII051",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/jC7MId/",online_name:"\u8282\u70b9\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84",level:"h"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 050. \u5411\u4e0b\u7684\u8def\u5f84\u8282\u70b9\u4e4b\u548c",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII050"},next:{title:"\ud83d\udfe2 \u5251\u6307 Offer II 052. \u5c55\u5e73\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII052"}},s=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],d=function(e){var n=e.children,t=e.color;return(0,o.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},p={toc:s,Highlight:d};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,o.kt)(d,{color:"#ff375f",mdxType:"Highlight"},"\u56f0\u96be")),(0,o.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/jC7MId/"},"\ud83d\udd17 leetcode")))),(0,o.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,o.kt)("p",null,"\u6709\u70b9\u5751\u7239\u3002\u601d\u8def\u8ddf\u5b98\u65b9\u9898\u89e3\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4f46\u6211\u7684\u5199\u6cd5\u5c31\u662f\u8d85\u65f6\u4e86\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private int maxVal;\n\n    // \u53ea\u8fd4\u56de[a]\uff0ca\u8868\u793a\u4ece\u8fd9\u4e2a\u70b9\u5f80\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\uff1bb\u8868\u793a\u7a7f\u8fc7\u8fd9\u4e2a\u70b9\u7684\u6700\u5927\u503c\n    private int dfs(TreeNode node) {\n        int leftRes = 0, rightRes = 0, myRes = node.val, throughRes = node.val;\n        \n        if (node.left != null) {\n            leftRes = dfs(node.left);\n        }\n        if (node.right != null) {\n            rightRes = dfs(node.right);\n        }\n\n        myRes += Math.max(Math.max(leftRes, rightRes), 0);\n        throughRes += Math.max(leftRes + rightRes, 0);\n\n        maxVal = Math.max(Math.max(myRes, throughRes), maxVal);\n\n        return myRes;\n    }\n\n    public int maxPathSum(TreeNode root) {\n        maxVal = Integer.MIN_VALUE;\n\n        dfs(root);\n\n        return maxVal;\n    }\n}\n\n")),(0,o.kt)("p",null,"\u5b98\u65b9\u9898\u89e3\u662f\u8fd9\u6837\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    int maxSum = Integer.MIN_VALUE;\n\n    public int maxPathSum(TreeNode root) {\n        maxGain(root);\n        return maxSum;\n    }\n\n    public int maxGain(TreeNode node) {\n        if (node == null) {\n            return 0;\n        }\n        \n        // \u9012\u5f52\u8ba1\u7b97\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        // \u53ea\u6709\u5728\u6700\u5927\u8d21\u732e\u503c\u5927\u4e8e 0 \u65f6\uff0c\u624d\u4f1a\u9009\u53d6\u5bf9\u5e94\u5b50\u8282\u70b9\n        int leftGain = Math.max(maxGain(node.left), 0);\n        int rightGain = Math.max(maxGain(node.right), 0);\n\n        // \u8282\u70b9\u7684\u6700\u5927\u8def\u5f84\u548c\u53d6\u51b3\u4e8e\u8be5\u8282\u70b9\u7684\u503c\u4e0e\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        int priceNewpath = node.val + leftGain + rightGain;\n\n        // \u66f4\u65b0\u7b54\u6848\n        maxSum = Math.max(maxSum, priceNewpath);\n\n        // \u8fd4\u56de\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\u503c\n        return node.val + Math.max(leftGain, rightGain);\n    }\n}\n")),(0,o.kt)("p",null,"\u8fd9\u4e0d\u662f\u4e00\u6bdb\u4e00\u6837\u5417\uff01"))}m.isMDXComponent=!0}}]);