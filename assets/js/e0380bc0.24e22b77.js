"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3671],{3905:function(e,n,r){r.d(n,{Zo:function(){return f},kt:function(){return u}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},f=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),p=l(r),u=i,h=p["".concat(s,".").concat(u)]||p[u]||d[u]||a;return r?t.createElement(h,o(o({ref:n},f),{},{components:r})):t.createElement(h,o({ref:n},f))}));function u(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7875:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return f},Highlight:function(){return d},default:function(){return u}});var t=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],c={tags:["\u8bbe\u8ba1","\u5b57\u5178\u6811","\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII064",title:"\ud83d\udfe1 \u5251\u6307 Offer II 064. \u795e\u5947\u7684\u5b57\u5178",ques_id:"OfferII064",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/US1pGT/",online_name:"\u795e\u5947\u7684\u5b57\u5178",level:"m"},s=void 0,l={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII064",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII064",isDocsHomePage:!1,title:"\ud83d\udfe1 \u5251\u6307 Offer II 064. \u795e\u5947\u7684\u5b57\u5178",description:"<span",source:"@site/docs\\\u5251\u6307offer\u4e13\u9879\u7248\\leetcode_OfferII064.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII064",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII064",tags:[{label:"\u8bbe\u8ba1",permalink:"/trashbin/docs/tags/\u8bbe\u8ba1"},{label:"\u5b57\u5178\u6811",permalink:"/trashbin/docs/tags/\u5b57\u5178\u6811"},{label:"\u54c8\u5e0c\u8868",permalink:"/trashbin/docs/tags/\u54c8\u5e0c\u8868"},{label:"\u5b57\u7b26\u4e32",permalink:"/trashbin/docs/tags/\u5b57\u7b26\u4e32"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u8bbe\u8ba1","\u5b57\u5178\u6811","\u54c8\u5e0c\u8868","\u5b57\u7b26\u4e32","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII064",title:"\ud83d\udfe1 \u5251\u6307 Offer II 064. \u795e\u5947\u7684\u5b57\u5178",ques_id:"OfferII064",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/US1pGT/",online_name:"\u795e\u5947\u7684\u5b57\u5178",level:"m"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 063. \u66ff\u6362\u5355\u8bcd",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII063"},next:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 065. \u6700\u77ed\u7684\u5355\u8bcd\u7f16\u7801",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII065"}},f=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],d=function(e){var n=e.children,r=e.color;return(0,a.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},p={toc:f,Highlight:d};function u(e){var n=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,a.kt)(d,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49")),(0,a.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/US1pGT/"},"\ud83d\udd17 leetcode")))),(0,a.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,a.kt)("p",null,"\u542c\u4fe1\u5b98\u65b9\u9898\u89e3\u7684\u505a\u6cd5\uff0c\u628a\u6bcf\u4e2a\u5355\u8bcd\u62c6\u5206\u6210\u6240\u6709\u7684\u90bb\u5c45\uff0csearch\u65f6\u627e\u4e0b\u6bcf\u4e2a\u90bb\u5c45\u5728\u4e0d\u5728\uff0c\u5728\u7684\u8bdd\u8bf4\u660e\u6709\u620f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class MagicDictionary {\n\n    private HashSet<String> words;\n    private HashMap<String, Integer> neighs;\n\n    /** Initialize your data structure here. */\n    public MagicDictionary() {\n        this.words = new HashSet<>();\n        this.neighs = new HashMap<String, Integer>();\n    }\n\n    private String[] genNeighs(String word) {\n        int n = word.length();\n        String[] res = new String[n];\n        char[] chars = word.toCharArray();\n        for (int i=0; i<n; i+=1) {\n            char tmp = chars[i];\n            chars[i] = '*';\n            String nei = new String(chars);\n            chars[i] = tmp;\n            res[i] = nei;\n        }\n        return res;\n    }\n    \n    public void buildDict(String[] dictionary) {\n        for (String word: dictionary) {\n            this.words.add(word);\n\n            for (String nei: genNeighs(word)) {\n                this.neighs.put(nei, this.neighs.getOrDefault(nei, 0)+1);\n            }\n        }\n    }\n    \n    public boolean search(String searchWord) {\n        int n = searchWord.length();\n        for (String myNei: genNeighs(searchWord)) {\n            int res = this.neighs.getOrDefault(myNei, 0);\n            if (res > 1 || res == 1 && !this.words.contains(searchWord)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\n/**\n * Your MagicDictionary object will be instantiated and called as such:\n * MagicDictionary obj = new MagicDictionary();\n * obj.buildDict(dictionary);\n * boolean param_2 = obj.search(searchWord);\n */\n")),(0,a.kt)("h1",{id:"\u9898\u89e32"},"\u9898\u89e32"),(0,a.kt)("p",null,"\u66b4\u529b\u6cd5\u662f\u4f60\u6c38\u8fdc\u7684\u6e2f\u6e7e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class MagicDictionary {\n    private HashSet<String> words;\n\n    /** Initialize your data structure here. */\n    public MagicDictionary() {\n        this.words = new HashSet<>();\n    }\n    \n    public void buildDict(String[] dictionary) {\n        for (String word: dictionary) {\n            this.words.add(word);\n        }\n    }\n\n    private int diffs(String w1, String w2) {\n        int n1 = w1.length(), n2 = w2.length();\n        if (n1 != n2) {\n            return 2;\n        }\n        int cnt = 0;\n        for (int i=0; i<n1; i+=1) {\n            if (w1.charAt(i) != w2.charAt(i)) {\n                cnt += 1;\n                if (cnt > 1) {\n                    return 2;\n                }\n            }\n        }\n        return cnt;\n    }\n    \n    public boolean search(String searchWord) {\n        for (String word: this.words) {\n            if (diffs(searchWord, word) == 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Your MagicDictionary object will be instantiated and called as such:\n * MagicDictionary obj = new MagicDictionary();\n * obj.buildDict(dictionary);\n * boolean param_2 = obj.search(searchWord);\n */\n")))}u.isMDXComponent=!0}}]);