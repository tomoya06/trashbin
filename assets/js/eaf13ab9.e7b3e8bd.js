"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1644],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return u}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function f(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=f(e,["components","mdxType","originalType","parentName"]),d=c(r),u=o,m=d["".concat(s,".").concat(u)]||d[u]||p[u]||i;return r?t.createElement(m,a(a({ref:n},l),{},{components:r})):t.createElement(m,a({ref:n},l))}));function u(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var f={};for(var s in n)hasOwnProperty.call(n,s)&&(f[s]=n[s]);f.originalType=e,f.mdxType="string"==typeof e?e:o,a[1]=f;for(var c=2;c<i;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8312:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return f},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return l},Highlight:function(){return p},default:function(){return u}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],f={tags:["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u5e76\u67e5\u96c6","\u5b57\u7b26\u4e32","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII117",title:"\ud83d\udd34 \u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",ques_id:"OfferII117",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/H6lPxb/",online_name:"\u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",level:"h"},s=void 0,c={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117",isDocsHomePage:!1,title:"\ud83d\udd34 \u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",description:"<span",source:"@site/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII117",tags:[{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/trashbin/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/trashbin/docs/tags/\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e76\u67e5\u96c6",permalink:"/trashbin/docs/tags/\u5e76\u67e5\u96c6"},{label:"\u5b57\u7b26\u4e32",permalink:"/trashbin/docs/tags/\u5b57\u7b26\u4e32"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22","\u5e76\u67e5\u96c6","\u5b57\u7b26\u4e32","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII117",title:"\ud83d\udd34 \u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",ques_id:"OfferII117",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/H6lPxb/",online_name:"\u5251\u6307 Offer II 117. \u76f8\u4f3c\u7684\u5b57\u7b26\u4e32",level:"h"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 116. \u7701\u4efd\u6570\u91cf",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII116"}},l=[{value:"\u9898\u89e3 1.\u9519\u8bef\u793a\u8303.py",id:"\u9898\u89e3-1\u9519\u8bef\u793a\u8303py",children:[]},{value:"\u9898\u89e3 2.\u6284\u7b54\u6848.py",id:"\u9898\u89e3-2\u6284\u7b54\u6848py",children:[]}],p=function(e){var n=e.children,r=e.color;return(0,i.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},d={toc:l,Highlight:p};function u(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,i.kt)(p,{color:"#ff375f",mdxType:"Highlight"},"\u56f0\u96be")),(0,i.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/H6lPxb/"},"\ud83d\udd17 leetcode")))),(0,i.kt)("h2",{id:"\u9898\u89e3-1\u9519\u8bef\u793a\u8303py"},"\u9898\u89e3 1.\u9519\u8bef\u793a\u8303.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def numSimilarGroups(self, strs: List[str]) -> int:\n        def isSimilar(w1, w2):\n            cnt = 0\n            for a1, a2 in zip(w1, w2):\n                if a1 != a2:\n                    cnt += 1\n                    if cnt > 2:\n                        return False\n            return True\n        \n        wmap = dict()\n\n        fakeNodes = [-1] * len(strs)\n\n        for i in range(0, len(strs)):\n            accNodes = []\n            for j in range(0, len(strs)):\n                if i != j and (wmap.get(j, fakeNodes)[i] >= 0 or isSimilar(strs[i], strs[j])):\n                    accNodes.append(j)\n                else:\n                    accNodes.append(-1)\n            wmap[i] = accNodes\n        wmap[len(strs)-1] = []\n\n        groups = []\n\n        def visitRoutes(node):\n            group = []\n            \n            def doVisit(nextNode):\n                if nextNode not in wmap:\n                    return\n                group.append(nextNode)\n                nextAccs = wmap.pop(nextNode, [])\n                for acc in nextAccs:\n                    doVisit(acc)\n            \n            doVisit(node)\n            return group\n\n        \n        while wmap:\n            entry = list(wmap.keys())[0]\n            newGroup = visitRoutes(entry)\n            if newGroup:\n                groups.append(newGroup)\n\n        return len(groups)\n")),(0,i.kt)("h2",{id:"\u9898\u89e3-2\u6284\u7b54\u6848py"},"\u9898\u89e3 2.\u6284\u7b54\u6848.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def numSimilarGroups(self, strs: List[str]) -> int:\n        n = len(strs)\n        f = list(range(n))\n\n        def isSimilar(a, b):\n            cnt = 0\n            for wa, wb in zip(a, b):\n                if wa != wb:\n                    cnt += 1\n                    if cnt > 2:\n                        return False\n            return True\n        \n        def find(x):\n            if f[x] == x:\n                return x\n            f[x] = find(f[x])\n            return f[x]\n\n        for i in range(n):\n            for j in range(i+1, n):\n                fi, fj = find(i), find(j)\n                if fi == fj:\n                    continue\n                if isSimilar(strs[i], strs[j]):\n                    f[fi] = fj\n        \n        return sum(1 for i in range(n) if f[i] == i)\n")))}u.isMDXComponent=!0}}]);