"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6750],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),u=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(a.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(t),p=o,m=d["".concat(a,".").concat(p)]||d[p]||f[p]||c;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,l=new Array(c);l[0]=d;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<c;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5143:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return s},Highlight:function(){return f},default:function(){return p}});var r=t(7462),o=t(3366),c=(t(7294),t(3905)),l=["components"],i={tags:["\u54c8\u5e0c\u8868","\u94fe\u8868","\u53cc\u6307\u9488","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII023",title:"\ud83d\udfe2 \u5251\u6307 Offer II 023. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u8282\u70b9",ques_id:"OfferII023",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/3u1WK4/",online_name:"\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u8282\u70b9",level:"e"},a=void 0,u={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII023",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII023",isDocsHomePage:!1,title:"\ud83d\udfe2 \u5251\u6307 Offer II 023. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u8282\u70b9",description:"<span",source:"@site/docs\\\u5251\u6307offer\u4e13\u9879\u7248\\leetcode_OfferII023.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII023",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII023",tags:[{label:"\u54c8\u5e0c\u8868",permalink:"/trashbin/docs/tags/\u54c8\u5e0c\u8868"},{label:"\u94fe\u8868",permalink:"/trashbin/docs/tags/\u94fe\u8868"},{label:"\u53cc\u6307\u9488",permalink:"/trashbin/docs/tags/\u53cc\u6307\u9488"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u54c8\u5e0c\u8868","\u94fe\u8868","\u53cc\u6307\u9488","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII023",title:"\ud83d\udfe2 \u5251\u6307 Offer II 023. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u8282\u70b9",ques_id:"OfferII023",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/3u1WK4/",online_name:"\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u8282\u70b9",level:"e"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 022. \u94fe\u8868\u4e2d\u73af\u7684\u5165\u53e3\u8282\u70b9",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII022"},next:{title:"\ud83d\udfe2 \u5251\u6307 Offer II 024. \u53cd\u8f6c\u94fe\u8868",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII024"}},s=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]},{value:"\u9898\u89e32",id:"\u9898\u89e32",children:[]}],f=function(e){var n=e.children,t=e.color;return(0,c.kt)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},d={toc:s,Highlight:f};function p(e){var n=e.components,t=(0,o.Z)(e,l);return(0,c.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,c.kt)("div",{parentName:"div",className:"admonition-heading"},(0,c.kt)("h5",{parentName:"div"},(0,c.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,c.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,c.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,c.kt)("div",{parentName:"div",className:"admonition-content"},(0,c.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,c.kt)(f,{color:"#00b8a3",mdxType:"Highlight"},"\u7b80\u5355")),(0,c.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,c.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/3u1WK4/"},"\ud83d\udd17 leetcode")))),(0,c.kt)("p",null,"\u8bb0\u5f97\u8fd8\u505a\u8fc7\u8fd9\u9053\u9898- -\u3002\u4f46\u8fd8\u662f\u5148\u5199\u51fa\u4e86\u60ca\u5929\u5730\u6ce3\u9b3c\u795e\u590d\u6742\u7684\u4ee3\u7801"),(0,c.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) {\n            return null;\n        }\n\n        ListNode curA = headA, curB = headB, tmp;\n        boolean isAShorter = false;\n\n        while (curA.next != null && curB.next != null) {\n            if (curA == curB) {\n                return curA;\n            }\n            curA = curA.next;\n            curB = curB.next;\n        }\n\n        if (curB.next == null) {\n            isAShorter = false;\n            tmp = curA;\n            curA = curB;\n            curB = tmp;\n        } else {\n            isAShorter = true;\n        }\n\n        int cnt = 0;\n        while (curB != curA && curB.next != null) {\n            cnt += 1;\n            curB = curB.next;\n        }\n\n        if (curB != curA) {\n            return null;\n        }\n\n        curA = headA;\n        curB = headB;\n\n        while (cnt > 0) {\n            if (!isAShorter) {\n                curA = curA.next;\n            } else {\n                curB = curB.next;\n            }\n\n            cnt -= 1;\n        }\n\n        while (curA != curB) {\n            curA = curA.next;\n            curB = curB.next;\n        }\n\n        return curA;\n    }\n}\n")),(0,c.kt)("h2",{id:"\u9898\u89e32"},"\u9898\u89e32"),(0,c.kt)("p",null,"\u5176\u5b9e\u53ea\u8981\u5728\u4e00\u4e2a\u5934\u8d70\u5b8c\u4e4b\u540e\u8d70\u53e6\u5916\u4e00\u4e2a\u5934\u5c31\u597d\u3002\u8d70\u4e24\u4e2a\u5934\u80af\u5b9a\u90fd\u80fd\u8d70\u76f8\u540c\u7684\u957f\u5ea6\uff0c\u5982\u679c\u6709\u4ea4\u70b9\u5c31\u5728\u4ea4\u70b9\u6c47\u5408\u4e86\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u90fd\u5728\u6700\u540e\u7684null\u6c47\u5408\u4e86\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) {\n            return null;\n        }\n\n        ListNode curA = headA, curB = headB;\n\n        while (curA != curB) {\n            curA = curA == null ? headB : curA.next;\n            curB = curB == null ? headA : curB.next;\n        }\n\n        return curA;\n    }\n}\n\n")))}p.isMDXComponent=!0}}]);