"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3141],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),p=a,m=f["".concat(s,".").concat(p)]||f[p]||d[p]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3100:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},Highlight:function(){return d},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={tags:["\u8bbe\u8ba1","\u6570\u7ec4","\u54c8\u5e0c\u8868","\u6570\u5b66","\u968f\u673a\u5316","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII030",title:"\ud83d\udfe1 \u5251\u6307 Offer II 030. \u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668",ques_id:"OfferII030",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/FortPu/",online_name:"\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668",level:"m"},s=void 0,c={unversionedId:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII030",id:"\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII030",isDocsHomePage:!1,title:"\ud83d\udfe1 \u5251\u6307 Offer II 030. \u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668",description:"<span",source:"@site/docs\\\u5251\u6307offer\u4e13\u9879\u7248\\leetcode_OfferII030.mdx",sourceDirName:"\u5251\u6307offer\u4e13\u9879\u7248",slug:"/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII030",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII030",tags:[{label:"\u8bbe\u8ba1",permalink:"/trashbin/docs/tags/\u8bbe\u8ba1"},{label:"\u6570\u7ec4",permalink:"/trashbin/docs/tags/\u6570\u7ec4"},{label:"\u54c8\u5e0c\u8868",permalink:"/trashbin/docs/tags/\u54c8\u5e0c\u8868"},{label:"\u6570\u5b66",permalink:"/trashbin/docs/tags/\u6570\u5b66"},{label:"\u968f\u673a\u5316",permalink:"/trashbin/docs/tags/\u968f\u673a\u5316"},{label:"\u5251\u6307offer\u4e13\u9879\u7248",permalink:"/trashbin/docs/tags/\u5251\u6307offer\u4e13\u9879\u7248"}],version:"current",frontMatter:{tags:["\u8bbe\u8ba1","\u6570\u7ec4","\u54c8\u5e0c\u8868","\u6570\u5b66","\u968f\u673a\u5316","\u5251\u6307offer\u4e13\u9879\u7248"],id:"leetcode_OfferII030",title:"\ud83d\udfe1 \u5251\u6307 Offer II 030. \u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668",ques_id:"OfferII030",platform:"leetcode",online_link:"https://leetcode-cn.com/problems/FortPu/",online_name:"\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668",level:"m"},sidebar:"bffer",previous:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 029. \u6392\u5e8f\u7684\u5faa\u73af\u94fe\u8868",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII029"},next:{title:"\ud83d\udfe1 \u5251\u6307 Offer II 031. \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7f13\u5b58",permalink:"/trashbin/docs/\u5251\u6307offer\u4e13\u9879\u7248/leetcode_OfferII031"}},u=[{value:"\u9898\u89e31",id:"\u9898\u89e31",children:[]}],d=function(e){var t=e.children,n=e.color;return(0,o.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},f={toc:u,Highlight:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,o.kt)(d,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49")),(0,o.kt)("p",{parentName:"div"},"\u539f\u9898\u94fe\u63a5 ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/FortPu/"},"\ud83d\udd17 leetcode")))),(0,o.kt)("h2",{id:"\u9898\u89e31"},"\u9898\u89e31"),(0,o.kt)("p",null,"java api \u5165 \u95e8 \u6559 \u5b66"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class RandomizedSet {\n    private Map<Integer, Integer> indexes;\n    private List<Integer> queue;\n    private Random rand;\n\n    /** Initialize your data structure here. */\n    public RandomizedSet() {\n        this.indexes = new HashMap<>();\n        this.queue = new ArrayList<>();\n        this.rand = new Random();\n    }\n    \n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\n    public boolean insert(int val) {\n        if (this.indexes.containsKey(val)) {\n            return false;\n        }\n        this.queue.add(val);\n        this.indexes.put(val, this.queue.size()-1);\n        return true;\n    }\n    \n    /** Removes a value from the set. Returns true if the set contained the specified element. */\n    public boolean remove(int val) {\n        int valIdx = this.indexes.getOrDefault(val, -1);\n        if (valIdx == -1) {\n            return false;\n        }\n        int queueEndIdx = this.queue.size()-1;\n\n        int lastElem = this.queue.get(queueEndIdx);\n        this.queue.set(valIdx, lastElem);\n        this.indexes.put(lastElem, valIdx);\n\n        this.indexes.remove(val);\n        this.queue.remove(queueEndIdx);\n        return true;\n    }\n    \n    /** Get a random element from the set. */\n    public int getRandom() {\n        int idx = this.rand.nextInt(this.queue.size());\n        return this.queue.get(idx);\n    }\n}\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet obj = new RandomizedSet();\n * boolean param_1 = obj.insert(val);\n * boolean param_2 = obj.remove(val);\n * int param_3 = obj.getRandom();\n */\n")))}p.isMDXComponent=!0}}]);